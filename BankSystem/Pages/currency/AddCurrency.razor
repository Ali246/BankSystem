@attribute [Authorize]
@page "/Currency/AddCurrency"
@using BankSystem.Data
@inject BankSystem.IService.ICurrencyService _currencyService
@inject NotificationService notificationService
@inject NavigationManager NavigationManager
@inject IStringLocalizer<App> Localizer
<div class="titleicon">
    @*<span class="oi oi-list" aria-hidden="true"></span>*@
    <h1>@Localizer["CreateCurrency"]</h1>
</div>
<hr />
<RadzenNotification />
<RadzenCard>
    <AuthorizeView Context="authContext">
        <Authorized>
            <EditForm Model="@newCurrency" OnValidSubmit="CreateCurrency" Context="formContext">
                <DataAnnotationsValidator />
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="CurrencyCode" class="control-label">@Localizer["CurrencyCode"]</label>
                        <InputText for="CurrencyCode" class="form-control" @bind-Value="@newCurrency.CurrencyCode"></InputText>

                    </div>
              
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">@Localizer["Save"]</button>
                        <button class="btn btn-primary" type="button" @onclick="() => cancel()">@Localizer["Cancel"]</button>
                    </div>
                </div>
            </EditForm>
        </Authorized>
    </AuthorizeView>
</RadzenCard>

@code {

    Currency newCurrency = new Currency();

    protected async Task CreateCurrency()
    {
        var Returned = _currencyService.AddCurrency(newCurrency);
        if (await Returned)
        {
            ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Success", Duration = 4000 });
            NavigationManager.NavigateTo("Currency/Currencies/", true);
        }
        else
        {
            ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error", Duration = 4000 });
        }

    }
    void cancel()
    {

        NavigationManager.NavigateTo("Currency/Currencies/", true);
    }

    void ShowNotification(NotificationMessage message)
    {
        notificationService.Notify(message);

    }

}
