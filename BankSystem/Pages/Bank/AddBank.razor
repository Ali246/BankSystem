@attribute [Authorize]
@page "/Bank/AddBank"
@using BankSystem.Data
@inject BankSystem.IService.IBankService _bankService
@inject NotificationService notificationService
@inject  NavigationManager NavigationManager
@inject IStringLocalizer<App> Localizer
<div class="titleicon">
    @*<span class="oi oi-list" aria-hidden="true"></span>*@
    <h1>@Localizer["CreateBank"]</h1>
</div>
<hr />
<RadzenCard>
    <AuthorizeView Context="authContext">
        <Authorized>
            <EditForm Model="@newBank" OnValidSubmit="CreateBank" Context="formContext">
                <DataAnnotationsValidator />
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="BankName" class="control-label">@Localizer["BankName"]</label>
                        <InputText for="BankName" class="form-control" @bind-Value="@newBank.BankName"></InputText>

                    </div>
                    <div class="form-group">
                        <label for="MainBranch" class="control-label">@Localizer["MainBranch"]</label>
                        <InputText for="MainBranch" class="form-control" @bind-Value="@newBank.MainBranch"></InputText>

                    </div>

                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">@Localizer["Save"]</button>
                        <button class="btn btn-primary" type="button" @onclick="() => cancel()">@Localizer["Cancel"]</button>
                    </div>

                </div>
            </EditForm>
        </Authorized>
    </AuthorizeView>
</RadzenCard>

@code {

    Bank newBank = new Bank();

    protected async Task CreateBank()
    {
        var Returned = _bankService.AddBank(newBank);
        if (await Returned)
        {
            ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Success", Duration = 4000 });
            NavigationManager.NavigateTo("Bank/Banks/", true);
        }
        else
        {
            ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error", Duration = 4000 });
        }

    }
    void cancel()
    {

        NavigationManager.NavigateTo("Bank/Banks/", true);
    }

    void ShowNotification(NotificationMessage message)
    {
        notificationService.Notify(message);

    }

}
